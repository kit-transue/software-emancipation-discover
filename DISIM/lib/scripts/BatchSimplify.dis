##########################################################################
# Copyright (c) 2015, Synopsys, Inc.                                     #
# All rights reserved.                                                   #
#                                                                        #
# Redistribution and use in source and binary forms, with or without     #
# modification, are permitted provided that the following conditions are #
# met:                                                                   #
#                                                                        #
# 1. Redistributions of source code must retain the above copyright      #
# notice, this list of conditions and the following disclaimer.          #
#                                                                        #
# 2. Redistributions in binary form must reproduce the above copyright   #
# notice, this list of conditions and the following disclaimer in the    #
# documentation and/or other materials provided with the distribution.   #
#                                                                        #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  #
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   #
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, #
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       #
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  #
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  #
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    #
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  #
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
##########################################################################
proc isunix {} {
	set unix_platform 0
	if [info exists tcl_platform(platform)] {
    	if {$tcl_platform(platform)=="unix"} {
			set unix_platform 1
		}
	}
	return $unix_platform
}

if [isunix] {
	source_dis simplify.dis
} else {
	source_dis simplify_nt.dis
}

proc SimplifyModule { Module logFile} {
	if [isunix] {
		dis_simplify -log "$logFile" $Module
	} else {
		run_simplify -log "$logFile" $Module
		quit_simplify
	}
}

proc RunBatchSimplify { } {
	global env

  if { [ license n co ] > 0 } {
  	group tmp SimplifyInputHACK
	set grpFile [open "$env(privateModelRoot)/groups/ext/SimplifyInput.grp" r]
	while { [gets $grpFile line] >= 0 } {
		set line [string trim $line \"]
		group add SimplifyInputHACK $line
	}
	close $grpFile

	set AllModules [group get SimplifyInputHACK]

#	if { ! [group exists SimplifyInput] } {
#		puts "No SimplifyInput input group"
#		return
#	}
#	set AllModules [group get SimplifyInput]

	puts "Running batch Simplify on [size $AllModules] files"
	set logFile $env(privateModelRoot)/$env(MODELNAME)_$env(VERSION)_Simplify.log
	catch { file delete "$logFile" }
	foreach Module $AllModules {
		SimplifyModule $Module $logFile
	}
	license n ci
  }
}

RunBatchSimplify

