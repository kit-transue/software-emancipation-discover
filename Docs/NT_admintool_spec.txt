##########################################################################
# Copyright (c) 2015, Synopsys, Inc.                                     #
# All rights reserved.                                                   #
#                                                                        #
# Redistribution and use in source and binary forms, with or without     #
# modification, are permitted provided that the following conditions are #
# met:                                                                   #
#                                                                        #
# 1. Redistributions of source code must retain the above copyright      #
# notice, this list of conditions and the following disclaimer.          #
#                                                                        #
# 2. Redistributions in binary form must reproduce the above copyright   #
# notice, this list of conditions and the following disclaimer in the    #
# documentation and/or other materials provided with the distribution.   #
#                                                                        #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  #
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   #
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, #
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       #
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  #
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  #
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    #
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  #
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
##########################################################################
Specification for Project Administration Tool
30.Sep.97 Kit Transue


This application is intended to make it easier to generate and
maintain Discover projects on Windows NT.

Maintenance of DISCOVER
models has traditionally required manual maintenance of PDFs--which in
turn requires an understanding of PDF syntax that goes beyond the
required knowledge about what is to be built.  One objective is to
remove this requirement that the maintainer understand PDF syntax.  As
a result, though it is likely that this tool will generate PDFs for
DISCOVER to use, I will try to eliminate users' direct interaction with
PDFs.  Since the PDF should be seen as an implementation detail and
not as a required component of the user interface, it will not be
discussed in this specification.


User Actions:

The tool will provide operations for adding projects to the DISCOVER
model, removing projects from the model, or refreshing a project
structure due to changes in the Makefile or environment.  It may be
possible in a second phase to update the model using projects selected
from the administration tool.


Information sources (input):

User input.  User input will be required to select the desired action,
or to specify custom or unusual configurations.  In all cases, a
reasonable default action/selection will be provided.  The user will
be able to override default model storage directory.


Microsoft project files (nmake files).  Makefiles generated by Visual
C++ will provide the bulk of the information about the project
structure.  They will parsed to determine files that should go into
the project, any subprojects, default defines and includes, compiler
name, etc.  Also available from the makefile is information about
default targets.

Environment.  The environment (including the registry) will provide
additional information--like lists of recently opened Developer's
Studio Workspaces, for example.  Also available from the environment
are build system configurations: list of include directories, compiler
path, and other preferences that may be double-checked against
information coming from the makefile.



User interface:

The main window will provide a tree view dialog listing available
projects.  Any actions requiring user input will bring up wizards that
will take the user through the process of completing the action.
Reasonable default operations will be provided.  If there are no
projects defined, the add project wizard will be invoked on startup.

Help must be provided.


Output:

In addition to describing a project hierarchy that reflects the
selected makefiles, the tool must generate a usable home project,
storage areas for non-model information (group/subsystem storage).
Creation of the home project will require providing a list selector
appropriate for the CM system installed on the users' machine.
It must also identify when scoping may be desirable, and must
automate the management of scoping to whatever degree possible.
