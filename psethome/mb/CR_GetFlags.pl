##########################################################################
# Copyright (c) 2015, Synopsys, Inc.                                     #
# All rights reserved.                                                   #
#                                                                        #
# Redistribution and use in source and binary forms, with or without     #
# modification, are permitted provided that the following conditions are #
# met:                                                                   #
#                                                                        #
# 1. Redistributions of source code must retain the above copyright      #
# notice, this list of conditions and the following disclaimer.          #
#                                                                        #
# 2. Redistributions in binary form must reproduce the above copyright   #
# notice, this list of conditions and the following disclaimer in the    #
# documentation and/or other materials provided with the distribution.   #
#                                                                        #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  #
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   #
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, #
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       #
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  #
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  #
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    #
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  #
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
##########################################################################
#This script gets parse flags for a given file by searching the file generated
#by model build process ($ADMINDIR/config/file_attributes.lst). The invocation line of
#the script, "$PSETHOME/bin/disperl $PSETHOME/mb/CR_GetFlags.pl ...", is placed
#in the make rule of the pdf generated by pdfgen so that pset_server/aset parser
#flags commands like parms_cpp and parms_comp work with CodeRover kind of model 
#builds. 
require ("$ENV{PSETHOME}/mb/dismb_lib.pl");

$is_NT = ( "$ENV{'OS'}" eq "Windows_NT" ) ? 1: 0;

sub compiler_name {
    my($lang) = $_[0];
    my($compiler) = "";
    if ($lang eq "C") {
        $compiler = ($is_NT) ? "CL" : "cc";
    }
    if ($lang eq "CPP") {
        $compiler = ($is_NT) ? "CL" : "CC";
    }
    return $compiler;
}

sub main {
    my $target_file = $_[0];
    if ($is_NT) {
		$target_file = eval '&dismb_lib::expand_env_vars($target_file)';
        $target_file =~ s%\\%/%g;
    }

    my($line, $filename, $lang, $flags);
    open(InFile, "<$ENV{'ADMINDIR'}/config/file_attributes.lst");
    while ( $line = <InFile> )
    {
        chomp($line);
		$line = eval '&dismb_lib::expand_env_vars($line)';

        #read tab separated fields from $ADMINDIR/config/file_attributes.lst
        #FULL_FILENAME<TAB>TIMESTAMP<TAB>LANGUAGE<TAB>COMPILATION_DIR<TAB>PARSER_FLAGS
		if ( $line =~ /^([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]*)\t+(.*)$/ ) { 
            $filename = $1;
            $lang = $3;
            $flags = $5;
			           
        	$filename =~ s%\\%/%g;

            if ( $filename =~ /^${target_file}$/i ) {
	        	my($compiler) = &compiler_name($lang);
				print "$compiler $flags";
				last;
	    	}
        }
    }
    close(InFile);
}

&main(@ARGV);
exit 0;
