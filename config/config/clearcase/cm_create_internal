#!/bin/sh
# cm_create (ClearCase) - Create ClearCase elements for new files

# When cm_put_pset needs to create a ClearCase element for a new
# .pset, it calls this script. This script might also be called
# by the configurator before calling cm_put_src.
#
# The file must exist before calling this script, this script simply
# turns a view private file into an element ready to be checked in.

# functions:
checkout () {
        # $1 is the item to check out.
        # if it's not checked out, do so and...
	set +e
	reserved=`cleartool describe $1 | head -1 | grep 'reserved'`
	set -e
	if [ "$reserved" = "" ]; then
 		cleartool checkout -reserved -nc $1
		#...add to the list to checkin if called from inc_checkin_psets.sh
		if [ "X" != "X$PSET_CM_TOCI" ]; then
                	echo $1 >> $PSET_CM_TOCI
		fi
	fi
}

checkin () {
	# inc_checkin_psets.sh sets PSET_CM_TOCI and will take care of all
	# checkins later, preventing co/ci thrashing of directories during modelbuild
	if [ "X" = "X$PSET_CM_TOCI" ]; then
		cleartool ci -nc $1
	fi
}

# main:
# exit script if we get any errors
set -e

# Check if file exists, exit if it doesn't
if [ ! -f $cm_workfile ]; then
    echo "cm_create: error: $cm_workfile does not exist"
    exit 1
fi

# Get directory name
dir=`dirname $cm_workfile`

# Check if directory is checked out and check it out if it's not already
checkout $dir

set +e
cleartool mkelem -nc $cm_workfile 2> /dev/null
if [ "$?" != "0" ] ; then
  set -e
  src_version=`cleartool lshist $cm_workfile | head -1 | awk '{ print $5 }' | tr "\"" " "`
  rm -f $cm_workfile  # this avoids 'override 444 protection?' questions
  mv $cm_workfile.mkelem $cm_workfile
  # Check out the new file (saving the 'keep' name assigned by ClearCase)
  keepfile=`cleartool co -nc -ndata $src_version \
	    | head -1 | $PSETCFG/util/atria_keepfile`
  # Rename the file back a final time
  mv $keepfile $cm_workfile
fi
cleartool ci -nc -identical $cm_workfile
set -e
# Check the directory back in
checkin $dir

exit 0

#### Parameters    : None
#### Return values : 0 = success, !0 = failure
#### Output	   : stdout = informational (displayed in configshell)
		   : stderr = error messages (displayed in config status dialog box)

#### Environment Variables
#	$cm_workfile	  - path to local (private) copy of file to be processed
#	$cm_elementtype_option - used to specify element type for cm_create
# 	$cm_elementtype_option is defined by the script cm_put_pset.
