#!/bin/sh
# cm_put_src (ClearCase) - Check in the source file

# exit script if we get any errors
set -e

# Try to check is work file directory clearcase element
set +e
directory=`dirname $cm_workfile`
dir_info=`cleartool describe -fmt "%m" $directory | grep 'private'`
if [ "$dir_info" != "" ] ; then
  echo "Directory is not an element of the revision control system" >&2
  echo "Unable to check-in source file" >&2
  exit 1
fi
set -e

# Execute the user-defined before put script if it exists
if [ "$cm_optscripts" != "" -a -f $cm_optscripts/cm_beforeput ] ; then
  $cm_optscripts/cm_beforeput
fi

latestversion=`echo $cm_revision_file | sed 's%^.*@@%%'`

# Add -identical to user-defined options
cm_options="-identical $cm_options"

# Check is that view private file. If it is - try to checkout directory & check this file in.
# Probably there is no ../LATEST specification in clearcase configuration

if [ "$cm_revision_file" = "" ] ; then
  $PSETCFG/cm_create_internal
  exit 0
fi

# Find the version of the file selected by the view
viewversion=`cleartool describe $cm_workfile | head -1 | \
	$PSETCFG/util/atria_revisions`

if [ "$latestversion" != "" -a "$latestversion" != "$viewversion" ]; then
  #force a put by recording a merge
  cleartool merge -to $cm_workfile -ndata -version $latestversion
fi

# Check it in
echo "cleartool checkin -cq $cm_options $cm_workfile <${cm_description:=/dev/null}"
      cleartool checkin -cq $cm_options $cm_workfile <${cm_description:=/dev/null}

# Execute the user-defined after put script (async) if it exists
if [ "$cm_optscripts" != "" -a -f $cm_optscripts/cm_afterput ] ; then
  $cm_optscripts/cm_afterput &
fi

exit 0

#### Parameters    : None
#### Return values : 0 = success, !0 = failure
#### Output	   : stdout = informational (displayed in configshell)
		   : stderr = error messages (displayed in config status dialog box)

#### Environment Variables
# Environment variables setup by DISCOVER for ALL config scripts:
#	$cm_optscripts    - Points to the directory of optional scripts
# Additional environment variables setup for this script by the configurator:
#	$cm_sysfile	  - path to system (public) copy of file to be processed
#			    (already processed by the pending filter at this point)
#	$cm_workfile	  - path to local (private) copy of file to be processed
#	$cm_options       - user defined options as configured in Configurator
#			    preferences dialog box for put
#	$cm_description   - path pointing to file containing users comments

#### Optional Scripts
#	cm_beforeput	  - Run before checking in the source file
#	cm_afterput	  - Run in the background if the check out (or delete) succeeds

