// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "spreadsheet.h"

/////////////////////////////////////////////////////////////////////////////
// CSpreadsheet

IMPLEMENT_DYNCREATE(CSpreadsheet, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CSpreadsheet properties

long CSpreadsheet::GetRows()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetRows(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CSpreadsheet::GetCols()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetCols(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CSpreadsheet::GetFixedRows()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetFixedRows(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CSpreadsheet::GetFixedCols()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetFixedCols(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

short CSpreadsheet::GetUserSelection()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CSpreadsheet::SetUserSelection(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

long CSpreadsheet::GetCurrentRow()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetCurrentRow(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CSpreadsheet::GetCurrentColumn()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CSpreadsheet::SetCurrentColumn(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

BOOL CSpreadsheet::GetEnableDraw()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CSpreadsheet::SetEnableDraw(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CSpreadsheet operations

short CSpreadsheet::GetCellType(long row, long col)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		row, col);
	return result;
}

void CSpreadsheet::SetCellType(long row, long col, short nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2;
	InvokeHelper(0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 row, col, nNewValue);
}

CString CSpreadsheet::GetCellText(long row, long col)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		row, col);
	return result;
}

void CSpreadsheet::SetCellText(long row, long col, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 row, col, lpszNewValue);
}

void CSpreadsheet::AddMenuItem(long row, long col, LPCTSTR text)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 row, col, text);
}

BOOL CSpreadsheet::GetCellCheck(long row, long col)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		row, col);
	return result;
}

void CSpreadsheet::SetCellCheck(long row, long col, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 row, col, bNewValue);
}

void CSpreadsheet::AddRow(long after)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 after);
}

void CSpreadsheet::RemoveRow(long row)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 row);
}

long CSpreadsheet::GetColWidth(long col)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		col);
	return result;
}

void CSpreadsheet::SetColWidth(long col, long nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 col, nNewValue);
}

void CSpreadsheet::Clear()
{
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CSpreadsheet::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
