// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CDataSource wrapper class

class CDataSource : public CWnd
{
protected:
	DECLARE_DYNCREATE(CDataSource)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x7ca41f77, 0x91c, 0x11d2, { 0xae, 0xe6, 0x0, 0xa0, 0xc9, 0xb7, 0x1d, 0xc4 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetServerLock();
	void SetServerLock(BOOL);

// Operations
public:
	CString AccessSync(BSTR* command);
	CString AccessOutput(BSTR* query);
	CString AccessDish(BSTR* query);
	void SetSource(LPCTSTR name, BOOL alone);
	void AcceptNotification(LPCTSTR resStr);
	void RejectNotification();
	BOOL IsServerBusy();
	BOOL IsConnectionLost();
	void AboutBox();
};
