// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CCMIntegrator wrapper class

class CCMIntegrator : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCMIntegrator)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x3ca23651, 0xb2f, 0x4e42, { 0x9c, 0x35, 0x94, 0x1d, 0xcb, 0xc9, 0x54, 0x80 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetCMName();
	void SetCMName(LPCTSTR);

// Operations
public:
	CString GetCMs();
	CString GetCommands();
	BOOL Connect(LPCTSTR szName);
	BOOL IsConnected();
	BOOL IsAvailable();
	CString GetAttributes();
	CString ExecCommand(LPCTSTR szCommand);
	BOOL Reconnect();
};
