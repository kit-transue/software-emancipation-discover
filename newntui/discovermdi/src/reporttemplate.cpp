// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "reporttemplate.h"

/////////////////////////////////////////////////////////////////////////////
// CReportTemplate

IMPLEMENT_DYNCREATE(CReportTemplate, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CReportTemplate properties

/////////////////////////////////////////////////////////////////////////////
// CReportTemplate operations

void CReportTemplate::AddChild(short type, LPCTSTR tag, LPCTSTR text)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 type, tag, text);
}

void CReportTemplate::AddSibling(short type, LPCTSTR tag, LPCTSTR text)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 type, tag, text);
}

void CReportTemplate::Save(LPCTSTR fname)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 fname);
}

BOOL CReportTemplate::Load(LPCTSTR fname)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		fname);
	return result;
}

void CReportTemplate::DeleteCurrent()
{
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CReportTemplate::MakeXML()
{
	CString result;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

BOOL CReportTemplate::ChangeCurrent(short type, LPCTSTR tag, LPCTSTR text)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		type, tag, text);
	return result;
}

short CReportTemplate::GetType()
{
	short result;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

CString CReportTemplate::GetTag()
{
	CString result;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CReportTemplate::GetText()
{
	CString result;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CReportTemplate::GetTagsList()
{
	CString result;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CReportTemplate::Clear()
{
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CReportTemplate::AddParent(short type, LPCTSTR tag, LPCTSTR text)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 type, tag, text);
}

long CReportTemplate::FindToken(LPCTSTR token)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		token);
	return result;
}

void CReportTemplate::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
