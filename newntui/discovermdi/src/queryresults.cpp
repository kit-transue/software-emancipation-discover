// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "queryresults.h"

/////////////////////////////////////////////////////////////////////////////
// CQueryResults

IMPLEMENT_DYNCREATE(CQueryResults, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CQueryResults properties

CString CQueryResults::GetFullListName()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetFullListName(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

CString CQueryResults::GetFilterListName()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetFilterListName(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

LPDISPATCH CQueryResults::GetDataSource()
{
	LPDISPATCH result;
	GetProperty(0x3, VT_DISPATCH, (void*)&result);
	return result;
}

void CQueryResults::SetDataSource(LPDISPATCH propVal)
{
	SetProperty(0x3, VT_DISPATCH, propVal);
}

CString CQueryResults::GetQuery()
{
	CString result;
	GetProperty(0x4, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetQuery(LPCTSTR propVal)
{
	SetProperty(0x4, VT_BSTR, propVal);
}

CString CQueryResults::GetFilter()
{
	CString result;
	GetProperty(0x5, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetFilter(LPCTSTR propVal)
{
	SetProperty(0x5, VT_BSTR, propVal);
}

CString CQueryResults::GetSort()
{
	CString result;
	GetProperty(0x6, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetSort(LPCTSTR propVal)
{
	SetProperty(0x6, VT_BSTR, propVal);
}

long CQueryResults::GetElement()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CQueryResults::SetElement(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

CString CQueryResults::GetSelectionName()
{
	CString result;
	GetProperty(0x8, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetSelectionName(LPCTSTR propVal)
{
	SetProperty(0x8, VT_BSTR, propVal);
}

CString CQueryResults::GetCaption()
{
	CString result;
	GetProperty(DISPID_CAPTION, VT_BSTR, (void*)&result);
	return result;
}

void CQueryResults::SetCaption(LPCTSTR propVal)
{
	SetProperty(DISPID_CAPTION, VT_BSTR, propVal);
}

BOOL CQueryResults::GetShortNames()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CQueryResults::SetShortNames(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CQueryResults operations

void CQueryResults::Push()
{
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CQueryResults::Pop()
{
	BOOL result;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CQueryResults::Update()
{
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CQueryResults::AmountSelected()
{
	long result;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CQueryResults::Clear()
{
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CQueryResults::RowAmount()
{
	long result;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CQueryResults::FilteredAmount()
{
	long result;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CQueryResults::ApplyAttributeChanges()
{
	InvokeHelper(0x11, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CQueryResults::CancelAttributeChanges()
{
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CQueryResults::AddAttribute(LPCTSTR logname, LPCTSTR option)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 logname, option);
}

void CQueryResults::RemoveAttribute(LPCTSTR logname, LPCTSTR option)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 logname, option);
}

short CQueryResults::CheckAttribute(LPCTSTR logname, LPCTSTR option)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		logname, option);
	return result;
}

void CQueryResults::Calculate()
{
	InvokeHelper(0x16, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CQueryResults::SaveSelectionTo(LPCTSTR szFileName, short cDelimiter)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szFileName, cDelimiter);
	return result;
}

CString CQueryResults::GetPrintformat()
{
	CString result;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CQueryResults::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
