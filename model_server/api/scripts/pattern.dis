##########################################################################
# Copyright (c) 2015, Synopsys, Inc.                                     #
# All rights reserved.                                                   #
#                                                                        #
# Redistribution and use in source and binary forms, with or without     #
# modification, are permitted provided that the following conditions are #
# met:                                                                   #
#                                                                        #
# 1. Redistributions of source code must retain the above copyright      #
# notice, this list of conditions and the following disclaimer.          #
#                                                                        #
# 2. Redistributions in binary form must reproduce the above copyright   #
# notice, this list of conditions and the following disclaimer in the    #
# documentation and/or other materials provided with the distribution.   #
#                                                                        #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  #
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   #
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, #
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       #
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  #
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  #
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    #
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  #
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
##########################################################################
proc add_pattern {name pars pattern} {
  add_attribute $name $pattern
  proc $name "$pars args" [generate_body $name $pars]
  return $name
}
proc generate_body { name pars } {
  set body "apply_pattern find $name \[list"
  foreach par $pars {append body " \$$par"}
  append body "\] \$args"
  return $body
}

proc apply_pattern {oper name pars args} {
  set objs [prepare_objs $pars $args]
  set unloaded [filter module&&!is_loaded $objs]  
  set res [uplevel "tree $oper $name $objs"]
  src_unload $unloaded
  return $res
}

proc prepare_objs {pars objs} {
    set objs  [set_copy $objs]
    set projs [filter {proj || scope} $objs]
    set mods  [filter module $objs]

    set mods  [set_union $mods [defines -module $projs]]
    set no_mod [size $mods]
    if {$no_mod > 1} {
	foreach par $pars {
	    if { [string first "_DI_" $par] == 0 } {
		set wref [where referenced $par]
		set mods [set_intersect $mods $wref] 
	    }
	}
    }
    set other [filter {!(proj || module || scope )} $objs]
    sappend $mods $other
    return $mods
}
