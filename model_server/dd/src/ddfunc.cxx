/*************************************************************************
* Copyright (c) 2015, Synopsys, Inc.                                     *
* All rights reserved.                                                   *
*                                                                        *
* Redistribution and use in source and binary forms, with or without     *
* modification, are permitted provided that the following conditions are *
* met:                                                                   *
*                                                                        *
* 1. Redistributions of source code must retain the above copyright      *
* notice, this list of conditions and the following disclaimer.          *
*                                                                        *
* 2. Redistributions in binary form must reproduce the above copyright   *
* notice, this list of conditions and the following disclaimer in the    *
* documentation and/or other materials provided with the distribution.   *
*                                                                        *
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  *
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   *
* HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, *
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  *
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  *
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    *
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  *
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   *
*************************************************************************/
//////////////////////////   FILE ddfunc.C  ///////////////////////////
//
// -- Contains several between-class functions.
//
// History:   07/29/91     John Cameron   Initial coding
//-------------------------------------------------------
// synopsis:    handles declaration -- definition pairs generated by
//              ast_hook
//              this is to provide a relation to propagate arg changes
//              to declarations
//
// description:
//------------------------------------------
// Restrictions:
// ...
//------------------------------------------


#include "astTree.h"
#include "smt.h"
#include "ddict.h"
#include "ast_cplus_tree.h"
#include "customize_util.h"
#ifdef GCC2
//extern "C" void ast_shared_free (void*);
#endif
#ifdef XXX_pairlist
struct pairlist {
  private:
    pairlist * next;
    astFunction_decl *p1;
    astFunction_decl *p2;
  public:
    pairlist(){};
    pairlist(astFunction_decl *f1, astFunction_decl *f2){p1= f1; p2= f2;}
    pairlist *get_next(){return next;}
    astFunction_decl *get_first(){return p1;}
    astFunction_decl *get_second(){return p2;}
    void set_next(pairlist *p){next= p;}
};

static pairlist *declist= (pairlist *)NULL;
#endif
int is_cons_or_destructor(astFunction_decl *fdecl)
{

  return ((fdecl->TREE_CODE() == MC_FUNCTION_DECL) && 
	  (DECL_CONSTRUCTOR_P(fdecl) || 
	   DESTRUCTOR_NAME_P(fdecl->DECL_ASSEMBLER_NAME())));
}

#ifdef XXX_get_declist_ptr
#ifdef GCC2
pairlist **get_declist_ptr ()
{
  return &declist;
}
#endif 
#endif
